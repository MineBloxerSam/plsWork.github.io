{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/$trackId.tsx", "../app/utils/db.server.ts", "../app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/docs/en/main/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { Loader } from \"@mantine/core\";\r\nimport type { ActionFunction } from \"@remix-run/node\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport { Form } from \"@remix-run/react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { db } from \"~/utils/db.server\";\r\n\r\n\r\n\r\nexport const action: ActionFunction = async ({request, params}) =>{\r\n    \r\n    const track = await db.track.findUnique({\r\n        where: {trackId: params.trackId},\r\n        select: {\r\n            redirectUrl: true,\r\n            id: true \r\n        },\r\n    });\r\n  \r\n    if(!track){\r\n        \r\n        throw new Error(`Track $(params.trackId) does not exits`)\r\n    };\r\n    \r\n    const form = await request.formData()\r\n    const ip = form.get('ip')\r\n    \r\n    if(typeof ip !== 'string'){\r\n        throw new Error('Missing user data')\r\n    };\r\n\r\n    const userAgent = request.headers.get('user-agent')\r\n\r\n    if(typeof userAgent !== 'string'){\r\n        throw new Error('Missing user data')\r\n    };\r\n    \r\n    const fields = {userAgent, ip, trackId: track.id};\r\n\r\n    await db.click.create({data: fields});\r\n    \r\n    return redirect(track.redirectUrl)\r\n}\r\n\r\nexport default function TrackRoute(){\r\n    const [ip, setIp] = useState()\r\n    const formRef = useRef<HTMLFormElement>(null)\r\n\r\n\r\n    useEffect(() =>{\r\n        fetch(\"https://api.ipify.org?format=json\")\r\n        .then((res) => res.json())\r\n        .then(res =>{\r\n            setIp(res.ip)\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() =>{\r\n        if(ip){\r\n            formRef.current?.submit();\r\n        }\r\n    }, [ip])\r\n\r\n    return(\r\n        <>\r\n            <Loader/>\r\n            <Form ref={formRef} method=\"post\" hidden>\r\n                ip: {ip}\r\n                <input name=\"ip\" defaultValue={ip}/>\r\n            </Form>\r\n        </>\r\n    )\r\n};", "import { PrismaClient } from \"@prisma/client\";\r\n\r\ndeclare global {\r\n    var __db: PrismaClient | undefined;\r\n};\r\n\r\nfunction getDb(): PrismaClient{\r\n    if(process.env.NODE_ENV === \"production\") {\r\n        return new PrismaClient();\r\n    };\r\n\r\n\r\n    if(!global.__db){\r\n        global.__db = new PrismaClient()\r\n    };\r\n\r\n    return global.__db\r\n};\r\n\r\nconst db = getDb();\r\n\r\nexport { db };", "import { Button, Container, TextInput } from \"@mantine/core\";\nimport type { ActionFunction } from \"@remix-run/node\";\nimport { redirect, Request } from \"@remix-run/node\"\nimport { Form } from \"@remix-run/react\";\nimport{ db } from \"~/utils/db.server\"\n\n\nconst randomstring = require(\"randomstring\");\nconst random = randomstring.generate({\n  length: 12, \n  charset: 'abcdefghijklmnopqrstuvwxyz1234567890'})\n\n\nexport const action: ActionFunction = async ({request}) =>{\n  const form = await request.formData();\n  const redirectUrl = form.get(\"redirectUrl\")\n\n  if(typeof redirectUrl !== \"string\") {\n    throw new Error(\"Invalid redirectUrl\");\n  };\n\n  const fields = {redirectUrl, trackId: random };\n\n  const track = await db.track.create({\n    data: fields,\n  });\n\n  console.log('*******'+redirectUrl+'*******')\n  console.log(track.trackId)\n  return redirect(`/tracks/${track.trackId}`)\n};\n\nexport default function Index() {\n  return (\n  <Container>\n    <Form method=\"post\" style={{display: \"flex\", alignItems: \"flex-end\"}}>\n      <TextInput  \n      \n      size=\"xl\"\n      placeholder=\"https://google.com\"\n      label=\"Redirect URl\"\n      required\n      name=\"redirectUrl\"\n      style={{flex:1}}\n      type=\"url\"\n      />\n\n      <Button ml=\"md\" size=\"xl\" type=\"submit\">\n        Create tracker\n      </Button>\n    </Form>\n  </Container>\n  );\n};\n", "export default {'version':'6f35751e','entry':{'module':'/build/entry.client-Q47HWJPO.js','imports':['/build/_shared/chunk-EHDMPI5L.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-RJ2SI3D3.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$trackId':{'id':'routes/$trackId','parentId':'root','path':':trackId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$trackId-XNAYRHUQ.js','imports':['/build/_shared/chunk-MX6EQOEZ.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':'index','index':undefined,'caseSensitive':undefined,'module':'/build/routes/index-I2ZYXYQ6.js','imports':['/build/_shared/chunk-MX6EQOEZ.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-6F35751E.js'};", "\nimport * as entryServer from \"/workspaces/plsWork.github.io/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/$trackId.tsx\";\nimport * as route2 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/$trackId\": {\n      id: \"routes/$trackId\",\n      parentId: \"root\",\n      path: \":trackId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: \"index\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_react", "import_jsx_dev_runtime", "import_node", "import_react", "import_jsx_dev_runtime", "action", "import_core", "import_node", "import_react", "import_jsx_dev_runtime", "action"]
}
